{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCar","state","car","Header","useState","openNavBar","setOpenNavBar","useSelector","Container","href","src","alt","Menu","map","index","RightMenu","CustomMenu","onClick","ev","CustomBar","len","BurgerNav","show","CustomClose","styled","div","props","p","Section","carProps","title","description","backgroundImg","leftBtnText","rightBtnText","Wrap","bgImage","ItemText","Button","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAMMA,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aANmB,CACnBC,KAAM,CAAC,UAAW,UAAW,UAAW,YAMxCC,SAAU,KAGCC,EAAY,SAACC,GAAD,OAAWA,EAAMC,IAAIJ,MAE/BJ,IAAf,Q,cCwDeS,I,cAAAA,EAhEf,WACE,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMR,EAAOS,YAAYP,GAEzB,OACE,eAACQ,EAAD,WACE,mBAAGC,KAAK,IAAR,SACE,qBAAKC,IAAI,kBAAkBC,IAAI,OAEjC,cAACC,EAAD,UACGd,GACCA,EAAKe,KAAI,SAACX,EAAKY,GAAN,OACP,mBAAeL,KAAK,IAApB,SACGP,GADKY,QAKd,eAACC,EAAD,WACE,mBAAGN,KAAK,IAAR,kBACA,mBAAGA,KAAK,IAAR,2BACA,eAACO,EAAD,CAAYC,QAAS,SAACC,GAAD,OAAQZ,GAAc,IAA3C,UACE,cAACa,EAAD,CAAWC,IAAI,SACf,cAACD,EAAD,CAAWC,IAAI,SACf,cAACD,EAAD,CAAWC,IAAI,cAGnB,eAACC,EAAD,CAAWC,KAAMjB,EAAjB,UACE,cAACkB,EAAD,CAAaN,QAAS,SAACC,GAAD,OAAQZ,GAAc,IAA5C,SACE,uCAEDR,GACCA,EAAKe,KAAI,SAACX,EAAKY,GAAN,OACP,6BACE,mBAAeL,KAAK,IAApB,SACGP,GADKY,QAKd,6BACE,mBAAGL,KAAK,IAAR,kCAEF,6BACE,mBAAGA,KAAK,IAAR,8BAEF,6BACE,mBAAGA,KAAK,IAAR,wBAEF,6BACE,mBAAGA,KAAK,IAAR,0BAEF,6BACE,mBAAGA,KAAK,IAAR,yBAEF,6BACE,mBAAGA,KAAK,IAAR,kCAEF,6BACE,mBAAGA,KAAK,IAAR,yCASJD,EAAYgB,IAAOC,IAAV,yNAaTb,EAAOY,IAAOC,IAAV,uRAgBJV,EAAYS,IAAOC,IAAV,8JAUTT,EAAaQ,IAAOC,IAAV,kEAKVN,EAAYK,IAAOC,IAAV,gIAGJ,SAACC,GAAD,OAAWA,EAAMN,OAItBC,EAAYG,IAAOC,IAAV,iZAUA,SAACC,GAAD,OAAYA,EAAMJ,KAAO,gBAAkB,sBAYpDC,EAAcC,IAAOG,EAAV,yQ,QCxHFC,I,EAAAA,EAtBf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,iBACKA,GADGC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,cAAeC,EAA3C,EAA2CA,YAAaC,EAAxD,EAAwDA,aAIxD,OACE,eAACC,EAAD,CAAMC,QAASJ,EAAf,UACE,eAACK,EAAD,WACE,6BAAKP,IACL,4BAAIC,OAEN,eAACO,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAaP,IACZC,GAAgB,cAACO,EAAD,UAAcP,OAEjC,cAACQ,EAAD,CAAWhC,IAAI,8CAQjByB,EAAOX,IAAOC,IAAV,kPAGa,SAACC,GAAD,yCAAuCA,EAAMU,QAA7C,SASjBC,EAAWb,IAAOC,IAAV,6IAORa,EAASd,IAAOC,IAAV,0BAENc,EAAcf,IAAOC,IAAV,uIAOXe,EAAahB,IAAOC,IAAV,4TAeVgB,EAAcjB,YAAOgB,EAAPhB,CAAH,gHAOXkB,EAAYlB,IAAOmB,IAAV,sFCJf,IAAMnC,EAAYgB,IAAOC,IAAV,qEAKAmB,EA1Ef,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEf,SAAU,CACRC,MAAO,UACPC,YAAa,sCACbC,cAAe,cACfC,YAAa,eACbC,aAAc,wBAGlB,cAAC,EAAD,CACEL,SAAU,CACRC,MAAO,UACPC,YAAa,sCACbC,cAAe,cACfC,YAAa,eACbC,aAAc,wBAGlB,cAAC,EAAD,CACEL,SAAU,CACRC,MAAO,UACPC,YAAa,sCACbC,cAAe,cACfC,YAAa,eACbC,aAAc,wBAGlB,cAAC,EAAD,CACEL,SAAU,CACRC,MAAO,UACPC,YAAa,sCACbC,cAAe,cACfC,YAAa,eACbC,aAAc,wBAGlB,cAAC,EAAD,CACEL,SAAU,CACRC,MAAO,sCACPC,YAAa,uBACbC,cAAe,kBACfC,YAAa,YACbC,aAAc,gBAGlB,cAAC,EAAD,CACEL,SAAU,CACRC,MAAO,sBACPC,YAAa,yDACbC,cAAe,iBACfC,YAAa,YACbC,aAAc,gBAGlB,cAAC,EAAD,CACEL,SAAU,CACRC,MAAO,cACPC,YAAa,GACbC,cAAe,kBACfC,YAAa,kBCpDRY,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCNOC,EAAQC,YAAe,CAClCC,QAAS,CACP/C,IAAKgD,KCOWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJY,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.36cb712e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cars: [\"Model S\", \"Model 3\", \"Model X\", \"Model Y\"],\r\n};\r\n\r\nconst carSlice = createSlice({\r\n  name: \"car\",\r\n  initialState,\r\n  reducers: {},\r\n});\r\n\r\nexport const selectCar = (state) => state.car.cars;\r\n\r\nexport default carSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n//import { Menu } from \"@mui/icons-material\";\r\nimport { selectCar } from \"../features/car/carSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Header() {\r\n  const [openNavBar, setOpenNavBar] = useState(false);\r\n  const cars = useSelector(selectCar);\r\n\r\n  return (\r\n    <Container>\r\n      <a href=\"#\">\r\n        <img src=\"images/logo.svg\" alt=\"\" />\r\n      </a>\r\n      <Menu>\r\n        {cars &&\r\n          cars.map((car, index) => (\r\n            <a key={index} href=\"#\">\r\n              {car}\r\n            </a>\r\n          ))}\r\n      </Menu>\r\n      <RightMenu>\r\n        <a href=\"#\">Shop</a>\r\n        <a href=\"#\">Tesla Account</a>\r\n        <CustomMenu onClick={(ev) => setOpenNavBar(true)}>\r\n          <CustomBar len=\"17px\" />\r\n          <CustomBar len=\"13px\" />\r\n          <CustomBar len=\"9px\" />\r\n        </CustomMenu>\r\n      </RightMenu>\r\n      <BurgerNav show={openNavBar}>\r\n        <CustomClose onClick={(ev) => setOpenNavBar(false)}>\r\n          <span>X</span>\r\n        </CustomClose>\r\n        {cars &&\r\n          cars.map((car, index) => (\r\n            <li>\r\n              <a key={index} href=\"#\">\r\n                {car}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        <li>\r\n          <a href=\"#\">Exsiting Inventory</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Used Inventory</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Trade-in</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Cybertruck</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Roadaster</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Exsiting Inventory</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Exsiting Inventory</a>\r\n        </li>\r\n      </BurgerNav>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst Container = styled.div`\r\n  min-height: 60px;\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 20px;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  a {\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    padding: 0 14px;\r\n    flex-wrap: nowrap;\r\n  }\r\n  @media (max-width: 764px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst RightMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  a {\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    padding: 0 6px;\r\n  }\r\n`;\r\n\r\nconst CustomMenu = styled.div`\r\n  cursor: pointer;\r\n  margin: 0 4px;\r\n`;\r\n\r\nconst CustomBar = styled.div`\r\n  border-bottom: 2.3px solid black;\r\n  border-radius: 1.1px;\r\n  width: ${(props) => props.len};\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst BurgerNav = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: white;\r\n  width: 250px;\r\n  list-style-type: none;\r\n  text-align: start;\r\n  padding: 20px;\r\n  transform: ${(props) => (props.show ? \"translateX(0)\" : \"translateX(100%)\")};\r\n  transition: transform 0.2s ease-in;\r\n  li {\r\n    padding: 15px;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    cursor: pointer;\r\n    a {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CustomClose = styled.p`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  text-align: end;\r\n  cursor: pointer;\r\n  span {\r\n    padding: 10px 15px;\r\n  }\r\n  span:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n    padding: 10px 15px;\r\n    border-radius: 50px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Section({ carProps }) {\r\n  const { title, description, backgroundImg, leftBtnText, rightBtnText } = {\r\n    ...carProps,\r\n  };\r\n\r\n  return (\r\n    <Wrap bgImage={backgroundImg}>\r\n      <ItemText>\r\n        <h1>{title}</h1>\r\n        <p>{description}</p>\r\n      </ItemText>\r\n      <Button>\r\n        <ButtonGroup>\r\n          <LeftButton>{leftBtnText}</LeftButton>\r\n          {rightBtnText && <RightButton>{rightBtnText}</RightButton>}\r\n        </ButtonGroup>\r\n        <DownArrow src=\"/tesla-clone/images/down-arrow.svg\" />\r\n      </Button>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: orange ${(props) => `url(\"/tesla-clone/images/${props.bgImage}\")`} no-repeat\r\n    center;\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst ItemText = styled.div`\r\n  padding-top: 15vh;\r\n  text-align: center;\r\n  transition: transform 2s linear;\r\n  transform: translate(-30px);\r\n`;\r\n\r\nconst Button = styled.div``;\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst LeftButton = styled.div`\r\n  background: rgba(23, 26, 32, 0.8);\r\n  color: white;\r\n  height: 40px;\r\n  width: 256px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 100px;\r\n  opacity: 0.87;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  margin: 8px;\r\n`;\r\nconst RightButton = styled(LeftButton)`\r\n  color: black;\r\n  background-color: white;\r\n  opacity: 0.67;\r\n  font-weight: 550;\r\n`;\r\n\r\nconst DownArrow = styled.img`\r\n  height: 40px;\r\n  animation: animateDown infinite 1.5s;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"./Section\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Container>\r\n      <Section\r\n        carProps={{\r\n          title: \"Model S\",\r\n          description: \"Order Online for Touchless Delivery\",\r\n          backgroundImg: \"model-s.jpg\",\r\n          leftBtnText: \"Custom Order\",\r\n          rightBtnText: \"Existing Inventory\",\r\n        }}\r\n      />\r\n      <Section\r\n        carProps={{\r\n          title: \"Model Y\",\r\n          description: \"Order Online for Touchless Delivery\",\r\n          backgroundImg: \"model-y.jpg\",\r\n          leftBtnText: \"Custom Order\",\r\n          rightBtnText: \"Existing Inventory\",\r\n        }}\r\n      />\r\n      <Section\r\n        carProps={{\r\n          title: \"Model 3\",\r\n          description: \"Order Online for Touchless Delivery\",\r\n          backgroundImg: \"model-3.jpg\",\r\n          leftBtnText: \"Custom Order\",\r\n          rightBtnText: \"Existing Inventory\",\r\n        }}\r\n      />\r\n      <Section\r\n        carProps={{\r\n          title: \"Model X\",\r\n          description: \"Order Online for Touchless Delivery\",\r\n          backgroundImg: \"model-x.jpg\",\r\n          leftBtnText: \"Custom Order\",\r\n          rightBtnText: \"Existing Inventory\",\r\n        }}\r\n      />\r\n      <Section\r\n        carProps={{\r\n          title: \"Lowest Cost Solar Panels in America\",\r\n          description: \"Money-back guarantee\",\r\n          backgroundImg: \"solar-panel.jpg\",\r\n          leftBtnText: \"Order Now\",\r\n          rightBtnText: \"Learn More\",\r\n        }}\r\n      />\r\n      <Section\r\n        carProps={{\r\n          title: \"Solar for New Roofs\",\r\n          description: \"Solar Roof Cost Less Than a new Roof Plus Solar Panels\",\r\n          backgroundImg: \"solar-roof.jpg\",\r\n          leftBtnText: \"Order Now\",\r\n          rightBtnText: \"Learn More\",\r\n        }}\r\n      />\r\n      <Section\r\n        carProps={{\r\n          title: \"Accessories\",\r\n          description: \"\",\r\n          backgroundImg: \"accessories.jpg\",\r\n          leftBtnText: \"Shop Now\",\r\n        }}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport carReducer from \"../features/car/carSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}